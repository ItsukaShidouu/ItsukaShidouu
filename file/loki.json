{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-10-15T10:00:00+07:00",
    "name": "Loki",
    "author": "unknown@unknown.com",
    "description": "Prometheus but for logs. This egg is for Loki instance only! You usually need pushing agents like Promtail to put logs in this",
    "features": null,
    "docker_images": {
        "ghcr.io/parkervcp/yolks:debian": "ghcr.io/parkervcp/yolks:debian"
    },
    "file_denylist": [],
    "startup": "./loki-linux -config.file=loki-docker-config.yaml",
    "config": {
        "files": "{\r\n    \"loki-docker-config.yaml\": {\r\n        \"parser\": \"yaml\",\r\n        \"find\": {\r\n            \"server.http_listen_port\": \"{{server.build.default.port}}\",\r\n            \"common.ring.instance_addr\": \"0.0.0.0\",\r\n            \"common.path_prefix\": \"/home/container/loki\",\r\n            \"common.storage.filesystem.chunks_directory\": \"/home/container/loki/chunks\",\r\n            \"common.storage.filesystem.rules_directory\": \"/home/container/loki/rules\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Loki started\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!/bin/bash\r\n# Switch to mounted working install directory\r\ncd /mnt/server\r\n\r\napt update -y\r\napt install -y zip unzip wget curl git jq file\r\n\r\nARCH=$( [[ \"$(uname -m)\" == \"x86_64\" ]] && echo \"amd64\" || echo \"arm64\" )\r\n\r\n# Determine Loki version\r\nif [ -z \"$LOKI_VERSION\" ] || [ \"$LOKI_VERSION\" = \"latest\" ]; then\r\n  LOKI_VERSION=$(curl -s https://api.github.com/repos/grafana/loki/releases/latest | jq -r .tag_name | sed 's/v//')\r\nfi\r\n\r\necho -e \"Downloading Loki v${LOKI_VERSION} for ${ARCH}...\"\r\ncurl -L -o loki.zip https://github.com/grafana/loki/releases/download/v${LOKI_VERSION}/loki-linux-${ARCH}.zip\r\nunzip loki.zip && rm -f loki.zip\r\n\r\necho -e \"Fetching config from Grafana Loki v${LOKI_VERSION}...\"\r\ncurl -L -o loki-docker-config.yaml https://raw.githubusercontent.com/grafana/loki/v${LOKI_VERSION}/cmd/loki/loki-local-config.yaml\r\n\r\nchmod +x loki-linux-${ARCH}\r\nmv loki-linux-${ARCH} loki-linux\r\n\r\necho -e \"âœ… Loki v${LOKI_VERSION} installation completed successfully!\"",
            "container": "ghcr.io/parkervcp/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "Loki Version",
            "description": "The version of Loki to use.\r\n\r\nFind all versions from https://github.com/grafana/loki",
            "env_variable": "LOKI_VERSION",
            "default_value": "latest",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:20",
            "field_type": "text"
        }
    ]
}
